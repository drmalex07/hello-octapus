name: maven-package

# run manually
#on: workflow_dispatch

on: 
  push:
    tags:
    - '1.*'

jobs:
  
  helloworld:
    
    # FIXME
    permissions: write-all
    
    runs-on: ubuntu-20.04
    env:
      # NOTE: needed for publishing to packages
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
    steps:
    - uses: actions/checkout@v3
      with: 
        # note: for private submodules we need a fine-grained access token (default token only covers top-level repo)
        # see https://github.com/orgs/community/discussions/25516
        submodules: 'true'
        # access token (fine-grained PAT) with (extra) read permissions on private submodules
        token: ${{ secrets.ACCESS_TOKEN }} 
    - uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: 'maven'
    - run: ls -hal
    - run: env | sort
    - run: ls -hal scripts
    # see variables on available contexts (https://docs.github.com/en/actions/learn-github-actions/contexts#github-context)
    - run: >-
        echo "Github Ref: ${{ github.ref }}"
    - run: uname -a
    - run: whoami
    - run: apt-get --version
    - run: sudo apt-get install jq
    - run: jq --version
    - name: Dump github context
      # https://docs.github.com/en/actions/learn-github-actions/contexts#example-printing-context-information-to-the-log
      run: |
        echo '${{ toJson(github) }}' | jq .
    - run: java -version 
    - run: mvn -version
    - run: mvn -B package shade:shade
    - run: java -jar target/hello-octapus.jar
    
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    
    - name: Upload release asset
      id: upload_release_asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./target/hello-octapus.jar
        #asset_name: hello-octapus.jar
        asset_name: hello-octapus.jar
        asset_content_type: application/zip
